iter #1: bubble sort for int[1000] took 2307700 nanoseconds
iter #2: bubble sort for int[1000] took 1464200 nanoseconds
iter #3: bubble sort for int[1000] took 1517300 nanoseconds
iter #4: bubble sort for int[1000] took 1577200 nanoseconds
iter #5: bubble sort for int[1000] took 1790700 nanoseconds
iter #6: bubble sort for int[1000] took 1588400 nanoseconds
iter #7: bubble sort for int[1000] took 1853900 nanoseconds
iter #8: bubble sort for int[1000] took 1644200 nanoseconds
iter #9: bubble sort for int[1000] took 1609500 nanoseconds
iter #10: bubble sort for int[1000] took 1551200 nanoseconds
>> Mean for bubble sort (int[1000]) = 1690430,000 nanoseconds | allocated : 0 bytes 

iter #1: merge sort for int[1000] took 381200 nanoseconds
iter #2: merge sort for int[1000] took 412600 nanoseconds
iter #3: merge sort for int[1000] took 311100 nanoseconds
iter #4: merge sort for int[1000] took 297500 nanoseconds
iter #5: merge sort for int[1000] took 299900 nanoseconds
iter #6: merge sort for int[1000] took 306100 nanoseconds
iter #7: merge sort for int[1000] took 451500 nanoseconds
iter #8: merge sort for int[1000] took 296100 nanoseconds
iter #9: merge sort for int[1000] took 583700 nanoseconds
iter #10: merge sort for int[1000] took 582500 nanoseconds
>> Mean for merge sort (int[1000]) = 392220,000 nanoseconds | allocated : 2097152 bytes 

iter #1: standard sort for int[1000] took 592000 nanoseconds
iter #2: standard sort for int[1000] took 732100 nanoseconds
iter #3: standard sort for int[1000] took 805600 nanoseconds
iter #4: standard sort for int[1000] took 561300 nanoseconds
iter #5: standard sort for int[1000] took 617200 nanoseconds
iter #6: standard sort for int[1000] took 560900 nanoseconds
iter #7: standard sort for int[1000] took 628200 nanoseconds
iter #8: standard sort for int[1000] took 254900 nanoseconds
iter #9: standard sort for int[1000] took 231100 nanoseconds
iter #10: standard sort for int[1000] took 213700 nanoseconds
>> Mean for standard sort (int[1000]) = 519700,000 nanoseconds | allocated : 0 bytes 

---------------------------------------------

iter #1: bubble sort for int[5000] took 44842400 nanoseconds
iter #2: bubble sort for int[5000] took 42670400 nanoseconds
iter #3: bubble sort for int[5000] took 38085300 nanoseconds
iter #4: bubble sort for int[5000] took 37061900 nanoseconds
iter #5: bubble sort for int[5000] took 32936200 nanoseconds
iter #6: bubble sort for int[5000] took 33092900 nanoseconds
iter #7: bubble sort for int[5000] took 36052700 nanoseconds
iter #8: bubble sort for int[5000] took 28984300 nanoseconds
iter #9: bubble sort for int[5000] took 27058100 nanoseconds
iter #10: bubble sort for int[5000] took 26389200 nanoseconds
>> Mean for bubble sort (int[5000]) = 34717340,000 nanoseconds | allocated : 0 bytes 

iter #1: merge sort for int[5000] took 790900 nanoseconds
iter #2: merge sort for int[5000] took 1001200 nanoseconds
iter #3: merge sort for int[5000] took 840300 nanoseconds
iter #4: merge sort for int[5000] took 745100 nanoseconds
iter #5: merge sort for int[5000] took 662200 nanoseconds
iter #6: merge sort for int[5000] took 650500 nanoseconds
iter #7: merge sort for int[5000] took 653400 nanoseconds
iter #8: merge sort for int[5000] took 735600 nanoseconds
iter #9: merge sort for int[5000] took 716900 nanoseconds
iter #10: merge sort for int[5000] took 607500 nanoseconds
>> Mean for merge sort (int[5000]) = 740360,000 nanoseconds | allocated : 2097152 bytes 

iter #1: standard sort for int[5000] took 744600 nanoseconds
iter #2: standard sort for int[5000] took 717200 nanoseconds
iter #3: standard sort for int[5000] took 746300 nanoseconds
iter #4: standard sort for int[5000] took 754400 nanoseconds
iter #5: standard sort for int[5000] took 712200 nanoseconds
iter #6: standard sort for int[5000] took 662500 nanoseconds
iter #7: standard sort for int[5000] took 660900 nanoseconds
iter #8: standard sort for int[5000] took 676600 nanoseconds
iter #9: standard sort for int[5000] took 651200 nanoseconds
iter #10: standard sort for int[5000] took 732400 nanoseconds
>> Mean for standard sort (int[5000]) = 705830,000 nanoseconds | allocated : 0 bytes 

---------------------------------------------

iter #1: bubble sort for int[10000] took 187562100 nanoseconds
iter #2: bubble sort for int[10000] took 222891000 nanoseconds
iter #3: bubble sort for int[10000] took 164176000 nanoseconds
iter #4: bubble sort for int[10000] took 163376500 nanoseconds
iter #5: bubble sort for int[10000] took 137201400 nanoseconds
iter #6: bubble sort for int[10000] took 161353800 nanoseconds
iter #7: bubble sort for int[10000] took 144581200 nanoseconds
iter #8: bubble sort for int[10000] took 145863800 nanoseconds
iter #9: bubble sort for int[10000] took 134434500 nanoseconds
iter #10: bubble sort for int[10000] took 187153700 nanoseconds
>> Mean for bubble sort (int[10000]) = 164859408,000 nanoseconds | allocated : 2097152 bytes 

iter #1: merge sort for int[10000] took 1898600 nanoseconds
iter #2: merge sort for int[10000] took 1681000 nanoseconds
iter #3: merge sort for int[10000] took 1712100 nanoseconds
iter #4: merge sort for int[10000] took 2403300 nanoseconds
iter #5: merge sort for int[10000] took 1996600 nanoseconds
iter #6: merge sort for int[10000] took 1855300 nanoseconds
iter #7: merge sort for int[10000] took 1846300 nanoseconds
iter #8: merge sort for int[10000] took 1509500 nanoseconds
iter #9: merge sort for int[10000] took 1912000 nanoseconds
iter #10: merge sort for int[10000] took 1858600 nanoseconds
>> Mean for merge sort (int[10000]) = 1867330,000 nanoseconds | allocated : 2097152 bytes 

iter #1: standard sort for int[10000] took 2899400 nanoseconds
iter #2: standard sort for int[10000] took 6064700 nanoseconds
iter #3: standard sort for int[10000] took 1936600 nanoseconds
iter #4: standard sort for int[10000] took 1632900 nanoseconds
iter #5: standard sort for int[10000] took 2821600 nanoseconds
iter #6: standard sort for int[10000] took 1726200 nanoseconds
iter #7: standard sort for int[10000] took 1393100 nanoseconds
iter #8: standard sort for int[10000] took 1825000 nanoseconds
iter #9: standard sort for int[10000] took 1581400 nanoseconds
iter #10: standard sort for int[10000] took 1606000 nanoseconds
>> Mean for standard sort (int[10000]) = 2348690,000 nanoseconds | allocated : 0 bytes 

---------------------------------------------

iter #1: bubble sort for int[50000] took 4025671200 nanoseconds
iter #2: bubble sort for int[50000] took 3756221100 nanoseconds
iter #3: bubble sort for int[50000] took 3554735800 nanoseconds
iter #4: bubble sort for int[50000] took 3990573000 nanoseconds
iter #5: bubble sort for int[50000] took 4203907600 nanoseconds
iter #6: bubble sort for int[50000] took 4358217900 nanoseconds
iter #7: bubble sort for int[50000] took 4312037300 nanoseconds
iter #8: bubble sort for int[50000] took 3809689200 nanoseconds
iter #9: bubble sort for int[50000] took 3906339200 nanoseconds
iter #10: bubble sort for int[50000] took 3954616100 nanoseconds
>> Mean for bubble sort (int[50000]) = 3987200768,000 nanoseconds | allocated : 0 bytes 

iter #1: merge sort for int[50000] took 11469400 nanoseconds
iter #2: merge sort for int[50000] took 7537600 nanoseconds
iter #3: merge sort for int[50000] took 7030800 nanoseconds
iter #4: merge sort for int[50000] took 6245900 nanoseconds
iter #5: merge sort for int[50000] took 5989400 nanoseconds
iter #6: merge sort for int[50000] took 5849000 nanoseconds
iter #7: merge sort for int[50000] took 6590700 nanoseconds
iter #8: merge sort for int[50000] took 7420200 nanoseconds
iter #9: merge sort for int[50000] took 7609100 nanoseconds
iter #10: merge sort for int[50000] took 6959100 nanoseconds
>> Mean for merge sort (int[50000]) = 7270120,000 nanoseconds | allocated : 3961287 bytes 

iter #1: standard sort for int[50000] took 8129800 nanoseconds
iter #2: standard sort for int[50000] took 8166400 nanoseconds
iter #3: standard sort for int[50000] took 7885400 nanoseconds
iter #4: standard sort for int[50000] took 8251900 nanoseconds
iter #5: standard sort for int[50000] took 8376300 nanoseconds
iter #6: standard sort for int[50000] took 7805700 nanoseconds
iter #7: standard sort for int[50000] took 7999900 nanoseconds
iter #8: standard sort for int[50000] took 8258000 nanoseconds
iter #9: standard sort for int[50000] took 8535000 nanoseconds
iter #10: standard sort for int[50000] took 8285900 nanoseconds
>> Mean for standard sort (int[50000]) = 8169430,500 nanoseconds | allocated : 0 bytes 

---------------------------------------------

iter #1: bubble sort for int[100000] took 17513278400 nanoseconds
iter #2: bubble sort for int[100000] took 14518177400 nanoseconds
iter #3: bubble sort for int[100000] took 14329333500 nanoseconds
iter #4: bubble sort for int[100000] took 17285508400 nanoseconds
iter #5: bubble sort for int[100000] took 16796364600 nanoseconds
iter #6: bubble sort for int[100000] took 16080349400 nanoseconds
iter #7: bubble sort for int[100000] took 15007538000 nanoseconds
iter #8: bubble sort for int[100000] took 14905682500 nanoseconds
iter #9: bubble sort for int[100000] took 15060737200 nanoseconds
iter #10: bubble sort for int[100000] took 14271265600 nanoseconds
>> Mean for bubble sort (int[100000]) = 15576823808,000 nanoseconds | allocated : 0 bytes 

iter #1: merge sort for int[100000] took 12387500 nanoseconds
iter #2: merge sort for int[100000] took 13814000 nanoseconds
iter #3: merge sort for int[100000] took 14077100 nanoseconds
iter #4: merge sort for int[100000] took 12764800 nanoseconds
iter #5: merge sort for int[100000] took 13979500 nanoseconds
iter #6: merge sort for int[100000] took 14505600 nanoseconds
iter #7: merge sort for int[100000] took 14315500 nanoseconds
iter #8: merge sort for int[100000] took 17569700 nanoseconds
iter #9: merge sort for int[100000] took 16943600 nanoseconds
iter #10: merge sort for int[100000] took 21404400 nanoseconds
>> Mean for merge sort (int[100000]) = 15176170,000 nanoseconds | allocated : 8388608 bytes 

iter #1: standard sort for int[100000] took 18172900 nanoseconds
iter #2: standard sort for int[100000] took 17804200 nanoseconds
iter #3: standard sort for int[100000] took 16887600 nanoseconds
iter #4: standard sort for int[100000] took 9900800 nanoseconds
iter #5: standard sort for int[100000] took 7392200 nanoseconds
iter #6: standard sort for int[100000] took 7739700 nanoseconds
iter #7: standard sort for int[100000] took 7658400 nanoseconds
iter #8: standard sort for int[100000] took 6721400 nanoseconds
iter #9: standard sort for int[100000] took 7501000 nanoseconds
iter #10: standard sort for int[100000] took 8057800 nanoseconds
>> Mean for standard sort (int[100000]) = 10783600,000 nanoseconds | allocated : 0 bytes 

---------------------------------------------
